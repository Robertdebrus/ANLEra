#textdomain wesnoth-ANLEra

# This file includes the all ANL mechanisms,
# either directly or by using macros defined in other files.
# The intention is that there are two ways to load the mechanisms:
# either by the era or by loading this resource from a scenario.

# That way, it can be played with other eras too.

# To use this in a scenario:
# - use [load_resource] with id=anl_mechanism
# - use [remove_event] with id=exta_ai_units before "turn 1" events happen;
#   This will disable differing behaviour when playing with the era.
# - use disallow_modification=Anewlandsp, as it is incompatible with this
# - use force_modification=ai_destroyers (optionally)

# - PS: if the scenario is not a competitive PvP one, you can additionally use
#   [load_resource] with id=anl_faction_flags, though it only has an effect when playing with the era.
#   It is not enabled by default, because it reveals each side's faction in the first turn.

[resource]
    id=anl_mechanism

    [event]
        name=preload
        first_time_only=no

        # Load the lua code from different files,
        # put them together into one table.
#ifdef TESTING_IS_EASIER_WITH_THIS_CODE
        [lua]
            code=<<
                anl = {}

                wesnoth.dofile('~add-ons/ANLEra/utils/research.lua')
                wesnoth.dofile('~add-ons/ANLEra/utils/diplomacy.lua')
                wesnoth.dofile('~add-ons/ANLEra/utils/extra_ai_units.lua')
            >>
        [/lua]
#else
        # This does the same, but the other players don't need to have the files on their computer.
        # It reads the files with the preprocessor and sends them over the network.
        [lua]
            code=<< anl = {} >>
        [/lua]
        [lua]
            code={~add-ons/ANLEra/utils/research.lua}
        [/lua]
        [lua]
            code={~add-ons/ANLEra/utils/diplomacy.lua}
        [/lua]
        [lua]
            code={~add-ons/ANLEra/utils/extra_ai_units.lua}
        [/lua]
#endif

        # This can be used to define more Lua code in a scenario, which relies
        # on being executed after the above, i. e. to overwrite negotiation options.
        [fire_event]
            name=after preload
        [/fire_event]
    [/event]

    [event]
        name=prestart

        # Create variables for each player, which save things like the research progress.
        [store_side]
            variable=players
        [/store_side]
        [foreach]
            array=players
            [do]
                {SET_SIDE_VARIABLES $this_item.side|}
            [/do]
        [/foreach]
        {CLEAR_VARIABLE players}

        # Adding menu_items for various purposes.
        {ANL_HELP}
        {WORKER_OPTIONS "Goblin Spearman,Goblin Impaler,Goblin Rouser,Peasant,Ruffian,ANLEra Dwarvish Miner,ANLEra Elvish Civilian,ANLEra Drake Worker,Walking Corpse,Soulless,ANLEra Merman Citizen"}

        # Research Menu.
        [set_menu_item]
            id=anl_research
            #textdomain wesnoth-anl
            description=_ "Oversee Research"
            #textdomain wesnoth-ANLEra
            [show_if]
                [have_unit]
                    side=$side_number
                    x,y=$x1,$y1
                    type_adv_tree="ANLEra Novice Orcish Shaman,ANLEra Drake Apprentice,Elvish Shaman,Mage,ANLEra Dwarvish Witness,ANLEra Rogue Mage,Dark Adept"
                    canrecruit=no
                    [not]
                        status=worked_this_turn
                    [/not]
                    [filter_location]
                       terrain={ANL_UNIVERSITIES}
                    [/filter_location]
                    [or]
                        side=$side_number
                        x,y=$x1,$y1
                        type_adv_tree="Mermaid Initiate"
                        canrecruit=no
                        [not]
                            status=worked_this_turn
                        [/not]
                        [filter_location]
                            terrain=Sm^Vm
                        [/filter_location]
                    [/or]
                [/have_unit]
            [/show_if]
            [command]
                [lua]
                    code=anl.research_menu()
                [/lua]
            [/command]
        [/set_menu_item]

        # Menu for researched units.
        [set_menu_item]
            id=anl_choose_new_recruit
            #textdomain wesnoth-anl
            description=_ "Choose New Recruit"
            #textdomain wesnoth-ANLEra
            [show_if]
                [have_unit]
                    side=$side_number
                    x,y=$x1,$y1
                    type_adv_tree="ANLEra Novice Orcish Shaman,ANLEra Drake Apprentice,Elvish Shaman,Mage,ANLEra Dwarvish Witness,ANLEra Rogue Mage,Dark Adept"
                    canrecruit=no
                    [not]
                        status=worked_this_turn
                    [/not]
                    [filter_location]
                       terrain={ANL_UNIVERSITIES}
                    [/filter_location]
                [/have_unit]
                [variable]
                    name=player_$side_number|.warfare.troop_available
                    greater_than=0
                [/variable]
                [lua]
                    code=<<
                        local x, choosable_units
                        x, researchable = anl.determine_faction(wml.variables['unit'].type)
                        return researchable[1] ~= nil
                    >>
                [/lua]
            [/show_if]
            [command]
                [lua]
                    code=anl.choose_new_recruit()
                [/lua]
            [/command]
        [/set_menu_item]
        # Same menu, just with different text for flavor.
        [set_menu_item]
            id=anl_choose_special_recruit
            description=_ "Choose Special Recruit"
            [show_if]
                [have_unit]
                    side=$side_number
                    x,y=$x1,$y1
                    type_adv_tree="Mermaid Initiate"
                    canrecruit=no
                    [not]
                        status=worked_this_turn
                    [/not]
                    [filter_location]
                        terrain=Sm^Vm
                    [/filter_location]
                [/have_unit]
                [variable]
                    name=player_$side_number|.warfare.troop_available
                    greater_than=0
                [/variable]
                [lua]
                    code=<<
                        local x, researchable, ready
                        x, researchable = anl.determine_faction(wml.variables['unit'].type)
                        return researchable[1] ~= nil
                    >>
                [/lua]
            [/show_if]
            [command]
                [lua]
                    code=anl.choose_new_recruit()
                [/lua]
            [/command]
        [/set_menu_item]

        # Diplomacy Menu for leaders instead.
        [set_menu_item]
            id=anl_diplomacy
            #textdomain wesnoth-anl
            description=_ "Diplomacy"
            #textdomain wesnoth-ANLEra
            [show_if]
                [have_unit]
                    side=$side_number
                    x,y=$x1,$y1
                    canrecruit=yes
                    [not]
                        status=worked_this_turn
                    [/not]
                [/have_unit]
            [/show_if]
            [filter_location]
                terrain={ANL_UNIVERSITIES}
            [/filter_location]
            [command]
                [lua]
                    code=anl.diplomacy_menu()
                [/lua]
            [/command]
        [/set_menu_item]

        # If a worker starts its turn on *^Gvs terrain, it will give money.
        # Place a flower on already existing *^Gvs terrain.
        [store_locations]
            variable=t
            terrain=*^Gvs
        [/store_locations]
        [foreach]
            array=t
            [do]
                {PLACE_IMAGE items/flower4.png $this_item.x $this_item.y}
            [/do]
        [/foreach]
        {CLEAR_VARIABLE t}

        # Replace problematic terrain

#ifver WESNOTH_VERSION >= 1.15.3
        # Compatibility code, to be removed in the future.
        # *^Uf looks like Tb^Tf, might cause confusion.
        [terrain]
            [and]
                terrain=*^Ufi
            [/and]
            terrain=^Tfi
            layer=overlay
        [/terrain]
        [terrain]
            [and]
                terrain=*^Uf
            [/and]
            terrain=^Tf
            layer=overlay
        [/terrain]
        # New terrains, which have less glitches than the existing ones:
        [terrain]
            [and]
                terrain=Cud^*
            [/and]
            terrain=Cf
            layer=base
        [/terrain]
        [terrain]
            [and]
                terrain=Kud^*
            [/and]
            terrain=Kf
            layer=base
        [/terrain]
#endif

        # Re is used for farms. To avoid that ^Gvs grows after an enemy L0 stepped onto it,
        # replace pre-existing Re terrain with another one.
        [terrain]
            [and]
                terrain=Re^*
            [/and]
            terrain=Rb
            layer=base
        [/terrain]

        # Ket causes glitches.
        [terrain]
            [and]
                terrain=Ket^*
            [/and]
            terrain=Ke
            layer=base
        [/terrain]
    [/event]

    # This is to avoid a player capturing an enemy village and destroying it immediately with the worker option.
    # Also, freshly recruited units shouldn't be able to build yet.
    # Nested in a turn 1 event, because it should not modify units placed at game start (if any).
    # It needs to use »unit placed« to also modify walking corpses created by combat.
    [event]
        name=turn 1
        [event]
            name=unit placed # ,capture
            first_time_only=no

            [modify_unit]
                [filter]
                    id=$unit.id
                [/filter]
                [status]
                    worked_this_turn=yes
                [/status]
            [/modify_unit]
        [/event]
    [/event]

    [event]
        name=side turn
        first_time_only=no

        # Auto-studying, happens first.
        {AUTO_STUDYING "ANLEra Novice Orcish Shaman,ANLEra Drake Apprentice,Elvish Shaman,Mage,ANLEra Dwarvish Witness,ANLEra Rogue Mage,Dark Adept"}

        # Remove working status from any working units when starting a turn.
        {AUTO_RELAXING}

        # Research complete messages.
        [lua]
            code=anl.research_complete()
        [/lua]

        # Auto-working. Happens after research, as research may have just improved farming or mining.
        {AUTO_FARMING "Goblin Spearman,Peasant,Ruffian,ANLEra Dwarvish Miner,ANLEra Elvish Civilian,ANLEra Drake Worker,Walking Corpse,ANLEra Merman Citizen"}
        {AUTO_MINING "Goblin Spearman,Peasant,Ruffian,ANLEra Dwarvish Miner,ANLEra Elvish Civilian,ANLEra Drake Worker,Walking Corpse,ANLEra Merman Citizen"}
        {AUTO_HUNTING "Woodsman,Poacher,Trapper,Huntsman,Ranger"}
    [/event]
[/resource]
