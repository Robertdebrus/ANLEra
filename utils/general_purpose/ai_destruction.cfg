# Make AI units destroy player’s buildings

# General purpose resource – destruction is not dependent on ANL Era
# for standalone usage, use the [load_resource] tag inside a scenario
#
#
# Burned down villages / universities and farms are transformed to Rd,
# and require thus an extra turn to transform them to grasland,
# before the hex is usable again for building.
#
# For Mines it's different, their hexes can direclty be used again.
# Is that balanced?

# wmllint: unbalanced-on
#define IS_AN_AI_SIDE
    # because programmes often made errors here,
    # this has been banned from WML and is only available in Lua
    [lua]
        code = <<
          local side_number = wesnoth.get_variable("side_number")

          -- catch the case that side_number is nil in the game setup phase
          if side_number == nil then return false end

          local side = wesnoth.sides[side_number]

          if side.controller == 'ai' then
              return true
          else
              return false
          end
        >>
    [/lua]
#enddef

#define IS_AN_AI_SIDE_CAPTURING_AN_ENEMY_VILLAGE
    # the owner_side variable is only available in capture events
    # owner side is the previous owner
    [lua]
        code = <<
          local side_number = wesnoth.get_variable("side_number")

          -- catch the case that side_number is nil in the game setup phase
          if side_number == nil then return false end

          local owner_side = wesnoth.get_variable("owner_side")
          local side = wesnoth.sides[side_number]

          if side.controller == 'ai' then
              if wesnoth.is_enemy(side_number, owner_side) then
                  return true
              end
          end
          return false
        >>
    [/lua]
#enddef

#define IS_ALLIED_WITH_A_PLAYER
    # droided sides count still as player side
    [lua]
        code = <<
          local side_number = wesnoth.get_variable("side_number")

          -- catch the case that side_number is nil in the game setup phase
          if side_number == nil then return false end

          -- get all sides
          local sides = wesnoth.get_sides()

          for i,v in ipairs(sides) do
              -- look at the allied ones
              if not wesnoth.is_enemy(side_number, v.side) then
                  -- allied with a human player?
                  -- very important: the side which is human on your client is
                  -- networked on someone elses client. Thus always check for both!
                  -- Otherwise Out-Of-Sync errors
                  if v.controller == 'human' then
                      return true
                  elseif v.controller == 'networked' then
                      return true
                  end
              end
          end
          -- we did not return yet.
          -- Hence this side is not allied with a player
          return false
        >>
    [/lua]
#enddef
# wmllint: unbalanced-off

[modification]
    id=ai_destruction
    name= _ "AI Destruction"
    type=hybrid
    description= _ "AI controlled units destroy villages and castles upon moving onto them."

    # Villages & Universities
    [event]
        name=capture
        id=ai_destruction_1
        first_time_only=no

        [filter_condition]
            {IS_AN_AI_SIDE_CAPTURING_AN_ENEMY_VILLAGE}
        [/filter_condition]
        [filter]
            [filter_location]
                terrain=*^V*
                [not]
                    # Mines (on M* and H*) have their own event with different sounds
                    terrain=M*^*,H*^*
                [/not]
            [/filter_location]
            # not leaders, they better get the healing
            canrecruit=no
        [/filter]

        [if]
            [have_location]
                x,y=$x1,$y1
                terrain=*^Vh,*^Vha,*^Vhr
            [/have_location]
            [then]
                {PLACE_IMAGE "scenery/village-human-burned2.png" $x1 $y1 }
            [/then]
            [elseif]
                [have_location]
                    x,y=$x1,$y1
                    # Hut, drake, orcish
                    terrain=*^Vc,*^Vca,*^Vd,*^Vo,*^Voa
                [/have_location]
                [then]
                    {PLACE_IMAGE "scenery/village-human-burned3.png" $x1 $y1 }
                [/then]
            [/elseif]
            [elseif]
                [have_location]
                    x,y=$x1,$y1
                    # Log cabin
                    terrain=*^Vl,*^Vla
                [/have_location]
                [then]
                    {PLACE_IMAGE "scenery/village-human-burned1.png" $x1 $y1 }
                [/then]
            [/elseif]
            [elseif]
                [have_location]
                    x,y=$x1,$y1
                    # Not for water based, merfolk, iglu, tents, tropical, windmill and the fake village
                    [not]
                        terrain=W*^*,S*^*,Chs*^*,Khs*^*,Chw*^*,Khw*^*,Cm*^*,Km*^*,*^Vm*,*^Vaa,*^Vdt,*^Vct,^*Vht,*^Vwm,*^Vov
                    [/not]
                [/have_location]
                # Are there other village types for which the not totally fitting images should not be placed?
                # Are there more usable images?

                # FIXME: how to show destruction if not using the images below?
                [then]
                    {VARIABLE_OP random_string value "scenery/village-human-burned1.png,scenery/village-human-burned2.png,scenery/village-human-burned3.png,scenery/village-human-burned4.png"}
                    {RANDOM $random_string}

                    {PLACE_IMAGE $random $x1 $y1}
                    {CLEAR_VARIABLE random,random_string}
                [/then]
            [/elseif]
        [/if]

        # Must be below the block above, as it changes it's condition otherwise
        [if]
            [have_location]
                x,y=$x1,$y1
                terrain=G*^*,R*^*,D*^*
            [/have_location]
            [then]
                {MODIFY_TERRAIN "Rd" $x1 $y1}
            [/then]
            [else]
                # Other Terrains, where transformation to Rd doesn't fit
                {MODIFY_TERRAIN_OVERLAY "^" $x1 $y1}
            [/else]
        [/if]

        [sound]
            name=torch.ogg
        [/sound]
    [/event]

    # Mines (Hills & Mountains)
    [event]
        name=capture
        id=ai_destruction_3
        first_time_only=no

        [filter_condition]
            {IS_AN_AI_SIDE_CAPTURING_AN_ENEMY_VILLAGE}
        [/filter_condition]
        [filter]
            [filter_location]
                terrain=H*^V*,M*^V*
            [/filter_location]
            # not leaders, they better get the healing
            canrecruit=no
        [/filter]

        {MODIFY_TERRAIN_OVERLAY "^" $x1 $y1}
        [sound]
            name=dagger-swish.wav
        [/sound]
        [sound]
            name=club.ogg
        [/sound]
    [/event]

    # Castles – three events
    # Villages do have an owner. Castles not. Two different conditions,
    # depending on if the AI is allied with the player, to not destroy the base.

    # Enemy AI sides
    [event]
        name=moveto
        id=ai_destruction_3
        first_time_only=no

        [filter_condition]
            {IS_AN_AI_SIDE}
        [/filter_condition]
        # this event is meant to be only trigger for sides not allied with the players
        [filter_condition]
            [not]
                {IS_ALLIED_WITH_A_PLAYER}
            [/not]
        [/filter_condition]
        # destroy almost everywhere
        [filter]
            [filter_location]
                x=$x1
                y=$y1
                terrain=C*^*,K*^*
                [not]
                    # avoid the own home area
                    location_id=$side_number
                    radius=3
                [/not]
            [/filter_location]
            # Leaders shall not lose the defensive bonus by destroying a castle.
            # This helps in case an unexpected sitatuion occurs, which isn't
            # covered by the above filter: leaders can't destroy keeps.
            canrecruit=no
        [/filter]

        [fire_event]
            name=ai castle destruction
            [primary_unit]
                x,y=$x1,$y1
            [/primary_unit]
        [/fire_event]
    [/event]

    # Allied AI sides
    [event]
        name=moveto
        id=ai_destruction_4
        first_time_only=no

        [filter_condition]
            {IS_AN_AI_SIDE}
        [/filter_condition]
        [filter_condition]
            {IS_ALLIED_WITH_A_PLAYER}
        [/filter_condition]
        # try not to destroy castles in the players base
        [filter]
            [filter_location]
                x=$x1
                y=$y1
                terrain=C*^*,K*^*
                [not]
                    # avoid the own home area – with a big radius
                    # this is only here for the case that an AI side is
                    # allied with and located next to the players.
                    location_id=$side_number
                    radius=12
                [/not]
            [/filter_location]
            # Leaders shall not lose the defensive bonus by destroying a castle.
            # This helps in case an unexpected sitatuion occurs, which isn't
            # covered by the above filter: leaders can't destroy keeps.
            canrecruit=no
        [/filter]

        [fire_event]
            name=ai castle destruction
            [primary_unit]
                x,y=$x1,$y1
            [/primary_unit]
        [/fire_event]
    [/event]

    # The actual castle destruction
    [event]
        name=ai castle destruction
        id=ai_destruction_5
        first_time_only=no

        [if]
            [have_location]
                x,y=$x1,$y1
                terrain=*^Cov,*^Kov
            [/have_location]
            [then]
                {MODIFY_TERRAIN_OVERLAY "^" $x1 $y1}
            [/then]
            [elseif]
                [have_location]
                    x,y=$x1,$y1
                    terrain=Chs^*,Khs^*
                [/have_location]
                [then]
                    {MODIFY_TERRAIN "Ss" $x1 $y1}
                [/then]
            [/elseif]
            [elseif]
                [have_location]
                    x,y=$x1,$y1
                    terrain=Chw^*,Khw^*,Cm*^*,Km*^*
                [/have_location]
                [then]
                    {MODIFY_TERRAIN "Wwr" $x1 $y1}
                [/then]
            [/elseif]
            [elseif]
                [have_location]
                    x,y=$x1,$y1
                    terrain=Cha^*,Kha^*,Coa^*,Koa^*,Cea^*,Kea^*
                [/have_location]
                [then]
                    {MODIFY_TERRAIN "Aa" $x1 $y1}
                [/then]
            [/elseif]
            #[elseif]
            # disabled, because on Dd one can build in the next turn again (like G*)
            # transforming to Rd instead
            #    [have_location]
            #        x,y=$x1,$y1
            #        terrain=Cd*^*,Kd*^*
            #    [/have_location]
            #    [then]
            #        {MODIFY_TERRAIN "Dd" $x1 $y1}
            #    [/then]
            #[/elseif]
            [else]
                {MODIFY_TERRAIN "Rd" $x1 $y1}
            [/else]
        [/if]
        {PLACE_IMAGE "scenery/rubble.png" $x1 $y1}
        [sound]
            name=dagger-swish.wav
        [/sound]
        [sound]
            name=club.ogg
        [/sound]
    [/event]

    # Farms
    # same logic for differentiating between enemy / allied AI
    [event]
        name=moveto
        id=ai_destruction_6
        first_time_only=no

        [filter_condition]
            {IS_AN_AI_SIDE}
        [/filter_condition]
        [filter_condition]
            [not]
                {IS_ALLIED_WITH_A_PLAYER}
            [/not]
        [/filter_condition]
        [filter]
            [filter_location]
                x,y=$x1,$y1
                terrain=*^Gvs
            [/filter_location]
        [/filter]

        [fire_event]
            name=ai farm destruction
            [primary_unit]
                x,y=$x1,$y1
            [/primary_unit]
        [/fire_event]
    [/event]

    [event]
        name=moveto
        id=ai_destruction_7
        first_time_only=no

        [filter_condition]
            {IS_AN_AI_SIDE}
        [/filter_condition]
        [filter_condition]
            {IS_ALLIED_WITH_A_PLAYER}
        [/filter_condition]
        [filter]
            [filter_location]
                x,y=$x1,$y1
                terrain=*^Gvs
                [not]
                    # avoid the own home area – with a big radius
                    # this is only here for the case that an AI side is
                    # allied with and located next to the players.
                    location_id=$side_number
                    radius=12
                [/not]
            [/filter_location]
        [/filter]

        [fire_event]
            name=ai farm destruction
            [primary_unit]
                x,y=$x1,$y1
            [/primary_unit]
        [/fire_event]
    [/event]

    # the actual destrucion
    [event]
        name=ai farm destruction
        id=ai_destruction_8
        first_time_only=no

        [if]
            [have_location]
                x,y=$x1,$y1
                terrain=G*^*,R*^*,D*^*
            [/have_location]
            [then]
                # requires an extra turn to transform the Rd terrain afterwards
                {MODIFY_TERRAIN "Rd^Es" $x1 $y1}
            [/then]
            [else]
                # unexpected situations (like Uu^Gvs)
                {MODIFY_TERRAIN_OVERLAY "^Es" $x1 $y1}
            [/else]
        [/if]

        # For the case the field was ready for harvest, remove image too
        [remove_item]
            x,y=$x1,$y1
        [/remove_item]

        [sound]
            name=pincers.ogg
        [/sound]
    [/event]

[/modification]
