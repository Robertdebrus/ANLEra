#textdomain wesnoth-ANLEra

# All code needed for handling trapped unit resides in this file
# It doesn't depend on code from other files and can be used standalone

# The ENABLE_TRAPPED_CREATURES macro insert an event, and this event does
# place units and create another rescue event for it.
# This is untypical, usually macros are used for that. But it's fine!

#define ENABLE_TRAPPED_CREATURES
    # Adds an event handler for TRAPPED_CREATURE. Each scenario that
    # uses TRAPPED_CREATURE must have this event handler.

    [event]
        # Parameters:
        #  * side,type,x,y= values for critter
        #  * players= comma list of sides that can rescue critter
        name=anl trapped creature
        first_time_only=no
        id=trapped # events with id's are guaranted to be unique
        [unit]
            side=$param.side
            type=$param.type
            ai_special=guardian
            x=$param.x
            y=$param.y
            random_traits=no
            overlays=projectiles/web.png
            # Questionable whether we want an loyal overlay
            # overlays=misc/loyal-icon.png,projectiles/web.png
            # Even questionable if we want them to be loyal
            # [modifications]
            #     {TRAIT_LOYAL}
            # [/modifications]
        [/unit]

        # Build a future [event] to rescue this critter.
        [set_variables]
            name=param.tag
            [literal]
                name=moveto
                first_time_only=yes
                [filter]
                    # side= filled in soon
                    [filter_location]
                        # x,y= filled in soon

                        # The 7 hexes in radius=1 do include the trapped
                        # creature's own hex, but this inclusion is harmless.
                        radius=1
                    [/filter_location]
                [/filter]
                [store_unit]
                    variable=critter
                    kill=no
                    [filter]
                        # x,y= filled in soon
                    [/filter]
                [/store_unit]
                [message]
                    speaker=unit
                    side_for=$side_number
                    # po: similar string in mainline
                    message= _ "Letâ€™s cut you free from this web."
                [/message]
                [if]
                    [variable]
                        name=critter.gender
                        equals=male
                    [/variable]
                    [then]
                        [message]
                            speaker=narrator
                            # no need to show this message to everybody
                            side_for=$side_number
                            # po: similar string in mainline
                            # po: the released unit is male
                            message= _ "male critter^You release the $critter.language_name from the web and it agrees to help you."
                            image=wesnoth-icon.png
                        [/message]
                    [/then]
                    [else]
                        [message]
                            speaker=narrator
                            # no need to show this message to everybody
                            side_for=$side_number
                            # po: similar string in mainline
                            # po: the released unit is female
                            message= _ "female critter^You release the $critter.language_name from the web and it agrees to help you."
                            image=wesnoth-icon.png
                        [/message]
                    [/else]
                [/if]

                # Transfer critter. Remove web overlay.
                {VARIABLE critter.side $side_number}
                {CLEAR_VARIABLE critter.overlays}
                # Questionable whether we want a loyal overlay
                # {VARIABLE critter.overlays misc/loyal-icon.png}
                [unstore_unit]
                    variable=critter
                [/unstore_unit]
                {CLEAR_VARIABLE critter}

                # Lose all moves, whether or not unit is skirmisher.
                {VARIABLE unit.moves 0}
                [unstore_unit]
                    variable=unit
                [/unstore_unit]
            [/literal]
        [/set_variables]

        # Configure and enable event.
        {VARIABLE param.tag.filter.side $param.players}
        {VARIABLE param.tag.filter.filter_location.x $param.x}
        {VARIABLE param.tag.filter.filter_location.y $param.y}
        {VARIABLE param.tag.store_unit.filter.x $param.x}
        {VARIABLE param.tag.store_unit.filter.y $param.y}
        [insert_tag]
            name=event
            variable=param.tag
        [/insert_tag]
    [/event]
#enddef

# This macro calls the event above, which in turn sets up this unit as trapped
# (calling = using [fire_event] and setting the $param variable)

#define TRAPPED_CREATURE X Y TYPE SIDE PLAYERS
    # Place a trapped creature.  This only works in scenarios that
    # have the event handler from ENABLE_TRAPPED_CREATURES.
    #
    # This creature of begins stuck in a web.  The initial SIDE needs
    # an alliance with all sides except PLAYERS, so that those sides
    # never kill this creature.  A unit from PLAYERS can move next to
    # this creature to rescue it.

    {CALL_FUNCTION (anl trapped creature) (
        side={SIDE}
        type={TYPE}
        x={X}
        y={Y}
        players={PLAYERS}
    )}
#enddef
